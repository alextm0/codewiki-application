"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/rehype-katex";
exports.ids = ["vendor-chunks/rehype-katex"];
exports.modules = {

/***/ "(ssr)/./node_modules/rehype-katex/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/rehype-katex/lib/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rehypeKatex)\n/* harmony export */ });\n/* harmony import */ var hast_util_from_html_isomorphic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hast-util-from-html-isomorphic */ \"(ssr)/./node_modules/hast-util-from-html-isomorphic/lib/index.js\");\n/* harmony import */ var hast_util_to_text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-to-text */ \"(ssr)/./node_modules/hast-util-to-text/lib/index.js\");\n/* harmony import */ var katex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! katex */ \"(ssr)/./node_modules/katex/dist/katex.mjs\");\n/* harmony import */ var unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! unist-util-visit-parents */ \"(ssr)/./node_modules/unist-util-visit-parents/lib/index.js\");\n/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('katex').KatexOptions} KatexOptions\n *\n * @typedef {import('vfile').VFile} VFile\n */ /**\n * @typedef {Omit<KatexOptions, 'displayMode' | 'throwOnError'>} Options\n */ \n\n\n\n/** @type {Readonly<Options>} */ const emptyOptions = {};\n/** @type {ReadonlyArray<unknown>} */ const emptyClasses = [];\n/**\n * Render elements with a `language-math` (or `math-display`, `math-inline`)\n * class with KaTeX.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */ function rehypeKatex(options) {\n    const settings = options || emptyOptions;\n    /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {undefined}\n   *   Nothing.\n   */ return function(tree, file) {\n        (0,unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_1__.visitParents)(tree, \"element\", function(element, parents) {\n            const classes = Array.isArray(element.properties.className) ? element.properties.className : emptyClasses;\n            // This class can be generated from markdown with ` ```math `.\n            const languageMath = classes.includes(\"language-math\");\n            // This class is used by `remark-math` for flow math (block, `$$\\nmath\\n$$`).\n            const mathDisplay = classes.includes(\"math-display\");\n            // This class is used by `remark-math` for text math (inline, `$math$`).\n            const mathInline = classes.includes(\"math-inline\");\n            let displayMode = mathDisplay;\n            // Any class is fine.\n            if (!languageMath && !mathDisplay && !mathInline) {\n                return;\n            }\n            let parent = parents[parents.length - 1];\n            let scope = element;\n            // If this was generated with ` ```math `, replace the `<pre>` and use\n            // display.\n            if (element.tagName === \"code\" && languageMath && parent && parent.type === \"element\" && parent.tagName === \"pre\") {\n                scope = parent;\n                parent = parents[parents.length - 2];\n                displayMode = true;\n            }\n            /* c8 ignore next -- verbose to test. */ if (!parent) return;\n            const value = (0,hast_util_to_text__WEBPACK_IMPORTED_MODULE_2__.toText)(scope, {\n                whitespace: \"pre\"\n            });\n            /** @type {Array<ElementContent> | string | undefined} */ let result;\n            try {\n                result = katex__WEBPACK_IMPORTED_MODULE_0__[\"default\"].renderToString(value, {\n                    ...settings,\n                    displayMode,\n                    throwOnError: true\n                });\n            } catch (error) {\n                const cause = /** @type {Error} */ error;\n                const ruleId = cause.name.toLowerCase();\n                file.message(\"Could not render math with KaTeX\", {\n                    ancestors: [\n                        ...parents,\n                        element\n                    ],\n                    cause,\n                    place: element.position,\n                    ruleId,\n                    source: \"rehype-katex\"\n                });\n                // KaTeX can handle `ParseError` itself, but not others.\n                if (ruleId === \"parseerror\") {\n                    result = katex__WEBPACK_IMPORTED_MODULE_0__[\"default\"].renderToString(value, {\n                        ...settings,\n                        displayMode,\n                        strict: \"ignore\",\n                        throwOnError: false\n                    });\n                } else {\n                    result = [\n                        {\n                            type: \"element\",\n                            tagName: \"span\",\n                            properties: {\n                                className: [\n                                    \"katex-error\"\n                                ],\n                                style: \"color:\" + (settings.errorColor || \"#cc0000\"),\n                                title: String(error)\n                            },\n                            children: [\n                                {\n                                    type: \"text\",\n                                    value\n                                }\n                            ]\n                        }\n                    ];\n                }\n            }\n            if (typeof result === \"string\") {\n                const root = (0,hast_util_from_html_isomorphic__WEBPACK_IMPORTED_MODULE_3__.fromHtmlIsomorphic)(result, {\n                    fragment: true\n                });\n                // Cast as we donâ€™t expect `doctypes` in KaTeX result.\n                result = /** @type {Array<ElementContent>} */ root.children;\n            }\n            const index = parent.children.indexOf(scope);\n            parent.children.splice(index, 1, ...result);\n            return unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_1__.SKIP;\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rehype-katex/lib/index.js\n");

/***/ })

};
;